
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package picoada;

/** CUP generated class containing symbol constants. */
public class sym {
  /* terminals */
  public static final int TypeInteger = 12;
  public static final int elsif = 16;
  public static final int PuntoComa = 28;
  public static final int CerrarParentesis = 30;
  public static final int loop = 8;
  public static final int If = 14;
  public static final int Id = 23;
  public static final int TypeFloat = 11;
  public static final int coma = 33;
  public static final int Else = 17;
  public static final int OperadorRelacional = 22;
  public static final int string = 5;
  public static final int begin = 3;
  public static final int AbrirParentesis = 29;
  public static final int TypeBoolean = 13;
  public static final int end = 4;
  public static final int While = 9;
  public static final int EOL = 39;
  public static final int then = 15;
  public static final int For = 7;
  public static final int EOF = 0;
  public static final int comillas = 37;
  public static final int DosPuntos = 27;
  public static final int is = 6;
  public static final int error = 1;
  public static final int or = 21;
  public static final int Integer = 10;
  public static final int CerrarBracket = 35;
  public static final int procedure = 2;
  public static final int punto = 36;
  public static final int put = 18;
  public static final int ERROR = 41;
  public static final int AbrirBracket = 34;
  public static final int and = 20;
  public static final int not = 19;
  public static final int ContString = 38;
  public static final int comentario = 40;
  public static final int AbrirCorchete = 31;
  public static final int OperadorSuma = 24;
  public static final int CerrarCorchete = 32;
  public static final int OperadorMultiplicacion = 25;
  public static final int asignacion = 26;
  public static final String[] terminalNames = new String[] {
  "EOF",
  "error",
  "procedure",
  "begin",
  "end",
  "string",
  "is",
  "For",
  "loop",
  "While",
  "Integer",
  "TypeFloat",
  "TypeInteger",
  "TypeBoolean",
  "If",
  "then",
  "elsif",
  "Else",
  "put",
  "not",
  "and",
  "or",
  "OperadorRelacional",
  "Id",
  "OperadorSuma",
  "OperadorMultiplicacion",
  "asignacion",
  "DosPuntos",
  "PuntoComa",
  "AbrirParentesis",
  "CerrarParentesis",
  "AbrirCorchete",
  "CerrarCorchete",
  "coma",
  "AbrirBracket",
  "CerrarBracket",
  "punto",
  "comillas",
  "ContString",
  "EOL",
  "comentario",
  "ERROR"
  };
}

